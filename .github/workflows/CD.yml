name: CD (Continuous Delivery & Deployment)

on: workflow_dispatch

jobs:
    
    build-push:
        name: Build and Push Image To DockerHub
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
              
            - name: Build and push flaskapi
              uses: docker/build-push-action@v4
              with:
                context: ./api
                file: ./api/Dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/flaskapi:${{ github.run_number }}, ${{ secrets.DOCKERHUB_USERNAME }}/flaskapi:latest
                  
            - name: Build and push postgres
              uses: docker/build-push-action@v4
              with:
                context: ./postgres
                file: ./postgres/Dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/postgres:${{ github.run_number }}, ${{ secrets.DOCKERHUB_USERNAME }}/postgres:latest
                
            - name: Build and push vueclient
              uses: docker/build-push-action@v4
              with:
                context: ./frontend
                file: ./frontend/Dockerfile
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/vueclient:${{ github.run_number }}, ${{ secrets.DOCKERHUB_USERNAME }}/vueclient:latest

    deploy:
        name: Deploy to server
        runs-on: self-hosted

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2
              with:
                  ref: main
                  
            - name: Create .env file
              run: |
                 echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
                 echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
                 echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
                 echo "MINIO_BUCKET=${{ secrets.MINIO_BUCKET }}" >> .env
                 echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
                 echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env

            - name: Build and Run Container
              run: |
                sudo docker compose down --rmi all && sudo docker compose pull && sudo docker compose --env-file .env up -d
